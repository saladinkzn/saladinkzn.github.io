<?xml version="1.0"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JBake</title>
    <link>http://saladinkzn.github.io/</link>
    <atom:link href="http://saladinkzn.github.io//feed.xml" rel="self" type="application/rss+xml" />
    <description>JBake Bootstrap Template</description>
    <language>en-gb</language>
    <pubDate>Wed, 22 Oct 2014 09:10:29 +0400</pubDate>
    <lastBuildDate>Wed, 22 Oct 2014 09:10:29 +0400</lastBuildDate>

    <item>
      <title>Шпаргалка Docker</title>
      <link>http://saladinkzn.github.io//blog/2014/docker-cheetsheet.html</link>
      <pubDate>Wed, 22 Oct 2014 00:00:00 +0400</pubDate>
      <guid isPermaLink="false">blog/2014/docker-cheetsheet.html</guid>
      	<description>
	&lt;h3&gt;Создание образа&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;p&gt;&lt;code&gt;docker pull ОБРАЗ&lt;/code&gt; - загружает образ из Docker Hub (аналог GitHub для Docker)&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;&lt;code&gt;docker build ПУТЬ | URL&lt;/code&gt; - создает образ с помощью Dockerfile&lt;br/&gt;&lt;strong&gt;Параметры:&lt;/strong&gt;&lt;/p&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;code&gt;-t&lt;/code&gt; | &lt;code&gt;--tag=&amp;quot;&amp;quot;&lt;/code&gt; - помечает созданный образ переданным названием (и, тэгом, если он будет передан)&lt;/li&gt;
    &lt;li&gt;&lt;code&gt;--rm&lt;/code&gt; - Удаляет промежуточные контейнеры после успешной сборки (по умолчанию == true)&lt;/li&gt;
  &lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;Управление образами&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;p&gt;&lt;code&gt;docker rmi&lt;/code&gt; - Удаляет образ, образ не может быть удален, если существуют контейнеры (даже незапущенные), которые основаны&lt;br/&gt;на данном образе&lt;br/&gt;&lt;strong&gt;Параметры:&lt;/strong&gt;&lt;/p&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;code&gt;-f&lt;/code&gt; - позволяет удалить образ даже если на нём основаны контейнеры&lt;/li&gt;
  &lt;/ul&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;&lt;code&gt;docker images&lt;/code&gt; - Отображает список всех существующих образов&lt;br/&gt;&lt;strong&gt;Параметры:&lt;/strong&gt;&lt;/p&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;code&gt;-a&lt;/code&gt; | &lt;code&gt;--all&lt;/code&gt; - отображает все образы (по умолчанию не отображает промежуточные контейнеры)&lt;/li&gt;
    &lt;li&gt;&lt;code&gt;-q&lt;/code&gt; - отображает только id образов, вместо таблицы&lt;/li&gt;
  &lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;Запуск и остановка контейнеров&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;p&gt;&lt;code&gt;docker run ОБРАЗ [КОМАНДА + АРГУМЕНТЫ]&lt;/code&gt; - Запускает выбранный образ в новом контейнере&lt;br/&gt;&lt;strong&gt;Параметры:&lt;/strong&gt;&lt;/p&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;code&gt;-d&lt;/code&gt; | &lt;code&gt;--detach&lt;/code&gt; - запускает контейнер в фоновом режиме и выводит только id свежесозданного контейнера. (по умолчанию == &lt;code&gt;false&lt;/code&gt;)&lt;/li&gt;
    &lt;li&gt;&lt;code&gt;-i&lt;/code&gt; | &lt;code&gt;--interactive&lt;/code&gt; - запускает контейнер в интерактивном режиме (оставляет STDIN открытым, даже если контейнер запущен в неприкрепленном режиме)&lt;/li&gt;
    &lt;li&gt;&lt;code&gt;-t&lt;/code&gt; | &lt;code&gt;--tty&lt;/code&gt; - запускает псевдотерминал, часто используется с &lt;code&gt;-i&lt;/code&gt;&lt;/li&gt;
    &lt;li&gt;&lt;code&gt;-p&lt;/code&gt; | &lt;code&gt;--publish=[]&lt;/code&gt; - пробрасывает порты контейнера в хост. Формат: ip:hostPort:containerPort | ip::containerPort | hostPort:containerPort | containerPort&lt;/li&gt;
    &lt;li&gt;&lt;code&gt;-e&lt;/code&gt; | &lt;code&gt;--env=[]&lt;/code&gt; - пробрасывает переменные окружения внутрь контейнера.&lt;/li&gt;
    &lt;li&gt;&lt;code&gt;-v&lt;/code&gt; | &lt;code&gt;--volume=[]&lt;/code&gt; - пробрасывает директорию файловой системы внутрь контейнера&lt;/li&gt;
  &lt;/ul&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;&lt;code&gt;docker stop КОНТЕЙНЕР&lt;/code&gt; - останавливает контейнер, передавая внутрь SIGTERM, а по истечении таймаута - SIGKILL&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;docker start КОНТЕЙНЕР&lt;/code&gt; - запускает остановленный контейнер.&lt;br/&gt;&lt;strong&gt;Параметры:&lt;/strong&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;code&gt;-i&lt;/code&gt; | &lt;code&gt;--interactive&lt;/code&gt; - аналогично docker run -i&lt;/li&gt;
  &lt;/ul&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;docker restart КОНТЕЙНЕР&lt;/code&gt; - Перезапускает выбранный контейнер с помощью docker stop и docker start&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;docker kill КОНТЕЙНЕР&lt;/code&gt; - Убивает контейнер, передавая внутрь SIGKILL&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;Управление контейнерами&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;docker port КОНТЕЙНЕР&lt;/code&gt; - отображает маппинг портов между хостом и контейнером&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;docker ps&lt;/code&gt; - отображает список запущенных контейнеров&lt;br/&gt;&lt;strong&gt;Параметры:&lt;/strong&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;code&gt;-a&lt;/code&gt; | &lt;code&gt;--all=(true|false)&lt;/code&gt; - отображать ли все контейнеры. По умолчанию == &lt;code&gt;false&lt;/code&gt;, т.е. отображаются только запущенные контейнеры&lt;/li&gt;
    &lt;li&gt;&lt;code&gt;-q&lt;/code&gt; - отображает только ID контейнеров вместо таблицы&lt;/li&gt;
  &lt;/ul&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;docker rm КОНТЕЙНЕР&lt;/code&gt; - удаляет контейнер. По умолчанию можно удалить только запущенный контейнер.&lt;br/&gt;&lt;strong&gt;Параметры:&lt;/strong&gt;
  &lt;ul&gt;
    &lt;li&gt;&lt;code&gt;-f&lt;/code&gt; | &lt;code&gt;--force=(true|false)&lt;/code&gt; - позволяет удалить запущенный контейнер. Используется передача SIGKILL внутрь.&lt;/li&gt;
  &lt;/ul&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;docker diff&lt;/code&gt; - отображает изменения относительно образа.&lt;/li&gt;
&lt;/ul&gt;&lt;h3&gt;Синтаксис Dockerfile&lt;/h3&gt;&lt;p&gt;Dockerfile служит скриптом сборки для команды &lt;code&gt;docker build&lt;/code&gt;. Перед началом сборки docker передает сборщику всё содержимое папки с Dockerfile&apos;ом,&lt;br/&gt;поэтому располагать его в корневой директории системы будет не лучшей идеей.&lt;/p&gt;&lt;p&gt;Формат файла:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# Комментарий
ИНСТРУКЦИЯ аргументы
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Первая инструкция обязательно должна быть инструкцией FROM.&lt;/p&gt;&lt;p&gt;Инструкции:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;p&gt;&lt;code&gt;FROM ОБРАЗ&lt;/code&gt; | &lt;code&gt;FROM ОБРАЗ:ТЭГ&lt;/code&gt; - Задает базовый образ для последующих инструкций. Может встречаться несколько раз в одном Dockerfile,&lt;br/&gt;если необходимо собрать несколько образов за раз.&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;&lt;code&gt;MAINTAINER имя&lt;/code&gt; - Позволяет задать поле &lt;em&gt;Author&lt;/em&gt; сгенерированного образа&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;&lt;code&gt;RUN команда&lt;/code&gt; | &lt;code&gt;RUN [&amp;quot;исполняемый файл&amp;quot;, &amp;quot;параметр1&amp;quot;, &amp;quot;параметр2&amp;quot;, ..]&lt;/code&gt; - Запускает команду на основе текущего образа и фиксирует изменения в новом образе. Новый образ будет использован для исполнения последующих инструкций. Первый синтаксис подразумевает запуск команд в стандартной оболочке (bin\sh -c)&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;&lt;code&gt;CMD [&amp;quot;исполняемый файл&amp;quot;, &amp;quot;параметр1&amp;quot;, &amp;quot;параметр2&amp;quot;]&lt;/code&gt; | &lt;code&gt;CMD [&amp;quot;параметр1&amp;quot;, &amp;quot;параметр2&amp;quot;]&lt;/code&gt; | &lt;code&gt;CMD команда параметр1 параметр2&lt;/code&gt; - Предоставляет значения по умолчанию для запуска контейнера. Эти значения могут как включать исполняемый файл (варианты 1, 3), так и не включать его (вариант 2). В последнем случае запускаемая команда&lt;br/&gt;должна быть задана с помощью инструкции &lt;code&gt;ENTRYPOINT&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;&lt;code&gt;EXPOSE порт &amp;lt;порт...&amp;gt;&lt;/code&gt; - Информирует Docker, что контейнер будет прослушивать указанные порты во время исполнения. Docker может использовать эту информацию, чтобы соединять контейнеры между собой используя связи. &lt;code&gt;EXPOSE&lt;/code&gt; сам по себе не делает порт доступным из хостовой системы. Для того, чтобы открыть порты в хостовую систему следует использовать флаг &lt;code&gt;-p&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;&lt;code&gt;ENV ключ значение&lt;/code&gt; - Позволяет задавать переменные окружения. Эти переменные будут использованы при запуске контейнера из собранного образа. Могут быть просмотрены с помощью команды &lt;code&gt;docker inspect&lt;/code&gt;, а также переопределены с помощью флага &lt;code&gt;--env&lt;/code&gt; команды &lt;code&gt;docker run&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;&lt;code&gt;ADD ОТКУДА &amp;lt;ОТКУДА...&amp;gt; КУДА&lt;/code&gt; - Используется для добавления новых файлов, директорий или ссылок на удалённые файлы в файловую систему контейнера. Несколько ОТКУДА может быть передано одновременно, но в этом случае все адреса должны быть относительны для директории, из которой происходит сборка. Каждый вхождение ОТКУДА может содержать&lt;br/&gt;один или несколько символов подстановки, которые будут разрешены с использование функции языка Go filepath.Match. КУДА должен быть абсолютным путем внутри контейнера.&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;&lt;code&gt;ENTRYPOINT [&amp;quot;исполняемый файл&amp;quot;, &amp;quot;параметр1&amp;quot;, &amp;quot;параметр2&amp;quot;]&lt;/code&gt; | &lt;code&gt;ENTRYPOINT команда параметр1 параметр2&lt;/code&gt; - позволяет сконфигурировать контейнер так, чтобы он запускался как исполняемый&lt;br/&gt;файл. В отличии от команды &lt;code&gt;CMD&lt;/code&gt; значение не будет переопределено аргументами, переданными в команду &lt;code&gt;docker run&lt;/code&gt;. Таким образом, аргументы из команды &lt;code&gt;docker run&lt;/code&gt; будут переданы внутрь&lt;br/&gt;контейнера, т.е. &lt;code&gt;docker run ОБРАЗ -d&lt;/code&gt; передаст -d исполняемому файлу.&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;&lt;code&gt;VOLUME [ПУТЬ]&lt;/code&gt; - создает точку монтирования с указанным именем и помечает её как содержащую подмонтированные разделы из хостовой системы или других контейнеров. Значение может быть&lt;br/&gt;задано как массив JSON, например, &lt;code&gt;VOLUME [&amp;quot;/var/log/&amp;quot;]&lt;/code&gt;, так и как обычной строкой с одним или несколькими аргументами, например &lt;code&gt;VOLUME /var/log&lt;/code&gt; или &lt;code&gt;VOLUME /var/log /var/db&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;&lt;code&gt;USER имя&lt;/code&gt; - позволяет задавать имя пользователя или UID, который будет использован для запуска образа, а так же для любой из инструкций &lt;code&gt;RUN&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;&lt;p&gt;&lt;code&gt;WORKDIR ПУТЬ&lt;/code&gt; - задает рабочую директорию для команд &lt;code&gt;RUN&lt;/code&gt;, &lt;code&gt;CMD&lt;/code&gt; и &lt;code&gt;ENTRYPOINT&lt;/code&gt;. Инструкция может быть использована несколько раз. Если ПУТЬ относителен, то он будет относительным для ПУТИ, заданным предыдущей инструкцией &lt;code&gt;WORKDIR&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;-----------------------------&lt;br/&gt;Образ - image&lt;br/&gt;Контейнер - container&lt;/p&gt;
	</description>
    </item>
    <item>
      <title>Шпаргалка GIT</title>
      <link>http://saladinkzn.github.io//blog/2014/first-post.html</link>
      <pubDate>Tue, 14 Oct 2014 00:00:00 +0400</pubDate>
      <guid isPermaLink="false">blog/2014/first-post.html</guid>
      	<description>
	
&lt;dl&gt;
    &lt;dt&gt;git init&lt;/dt&gt;
    &lt;dd&gt;
        Создание репозитория в текущей папке
    &lt;/dd&gt;
    &lt;dt&gt;git clone ПУТЬ&lt;/dt&gt;
    &lt;dd&gt;
        &lt;p&gt;
            Копирует существующий репозиторий, находящийся по указанному пути
        &lt;/p&gt;
        &lt;h3&gt;
            Пример.
        &lt;/h3&gt;
        &lt;code&gt;git clone git@github.com:saladinkzn/quantum.git&lt;/code&gt;
    &lt;/dd&gt;
    &lt;dt&gt;
        git status
    &lt;/dt&gt;
    &lt;dd&gt;
        Выводит список измененных файлов
    &lt;/dd&gt;
    &lt;dt&gt;
        git diff
    &lt;/dt&gt;
    &lt;dd&gt;
        Отображает разницу между двумя версиями файлов
        &lt;dl&gt;
            &lt;dt&gt;&lt;code&gt;git diff ФИКСАЦИЯ ФАЙЛ&lt;/code&gt;&lt;/dt&gt;
            &lt;dd&gt;
                Отображает разницу в между рабочей копией и фиксацией в файле&lt;br/&gt;
                Значения по умолчанию: ФИКСАЦИЯ - HEAD, ФАЙЛ - .
            &lt;/dd&gt;
            &lt;dt&gt;&lt;code&gt;git diff ФИКСАЦИЯ1..ФИКСАЦИЯ2 ФАЙЛ&lt;/code&gt;&lt;/dt&gt;
            &lt;dd&gt;
                Отображает разницу между ФИКСАЦИЕЙ1 и ФИКСАЦИЕЙ2
                Значений по умолчанию: ФИКСАЦИЯ1 - HEAD, ФИКСАЦИЯ2 - HEAD, ФАЙЛ - .
            &lt;/dd&gt;
            &lt;dt&gt;&lt;code&gt;git diff ФИКСАЦИЯ1...ФИКСАЦИЯ2 ФАЙЛ&lt;/code&gt;&lt;/dt&gt;
            &lt;dd&gt;
                Отображает изменения, произошедшие в ФИКСКАЦИИ2, начиная с общего предка ФИКСАЦИИ1 и ФИКСАЦИИ2
                Значения по умолчанию: ФИКСАЦИЯ1 - HEAD, ФИКСАЦИЯ2 - HEAD, ФАЙЛ - .
            &lt;/dd&gt;
        &lt;/dl&gt;
    &lt;/dd&gt;
    &lt;dt&gt;git log&lt;/dt&gt;
    &lt;dd&gt;
        Отображает список фиксаций в текующей ветке
        &lt;dl&gt;
            &lt;dt&gt;&lt;em&gt;ВЕТКА&lt;/em&gt;&lt;/dt&gt;
            &lt;dd&gt;Отображает список фиксаций в ВЕТКЕ&lt;/dd&gt;
            &lt;dt&gt;&lt;em&gt;ВЕТКА1..ВЕТКА2&lt;/em&gt;&lt;/dt&gt;
            &lt;dd&gt;Отображает список фиксаций в ВЕТКЕ2, которых нет в ВЕТКЕ1&lt;/dd&gt;
            &lt;dt&gt;&lt;code&gt;--graph&lt;/code&gt;&lt;/dt&gt;
            &lt;dd&gt;Меняет отображение на отображение в виде графа&lt;/dd&gt;
            &lt;dt&gt;&lt;code&gt;--oneline&lt;/code&gt;&lt;/dt&gt;
            &lt;dd&gt;
                Меняет отображение на отображение в однострочном виде, удобно для дальнейшей машинной обработки
                &lt;pre&gt;
a123123 Some changes
ade2132 Init commit&lt;/pre&gt;
            &lt;/dd&gt;
            &lt;dt&gt;&lt;code&gt;-КОЛИЧЕСТВО&lt;/code&gt;&lt;/dt&gt;
            &lt;dd&gt;Отображает количество отображаемых фиксаций&lt;/dd&gt;
        &lt;/dl&gt;
    &lt;/dd&gt;
    &lt;dt&gt;git commit -m &quot;сообщение&quot;&lt;/dt&gt;
    &lt;dd&gt;
        Фиксирует добавленные изменения в текущей ветке
        &lt;dl&gt;
            &lt;dt&gt;&lt;code&gt;--amend&lt;/code&gt;&lt;/dt&gt;
            &lt;dd&gt;Не создаёт новую фиксацию, а дополняет предыдущую&lt;/dd&gt;
        &lt;/dl&gt;
    &lt;/dd&gt;

    &lt;dt&gt;git checkout НАЗВАНИЕ_ВЕТКИ&lt;/dt&gt;
    &lt;dd&gt;
        Переключается в существующую ветку
        &lt;dl&gt;
            &lt;dt&gt;&lt;code&gt;-b&lt;/code&gt;&lt;/dt&gt;
            &lt;dd&gt;Создает новую ветку&lt;/dd&gt;
            &lt;dt&gt;&lt;code&gt;-- ФАЙЛ&lt;/code&gt;&lt;/dt&gt;
            &lt;dd&gt;Переключает определенные файлы, а не всю рабочую копию&lt;/dd&gt;
        &lt;/dl&gt;
    &lt;/dd&gt;
    &lt;dt&gt;git merge НАЗВАНИЕ_ВЕТКИ&lt;/dt&gt;
    &lt;dd&gt;
        Осуществляет слияние веток: изменения из указанной ветки попадают в текущую
    &lt;/dd&gt;
    &lt;dt&gt;git mergetool&lt;/dt&gt;
    &lt;dd&gt;
        Вызывает внешний инструмент для разрешения конфликтов слияния
    &lt;/dd&gt;
    &lt;dt&gt;git merge --abort&lt;/dt&gt;
    &lt;dd&gt;
        Отменяет текущее слияние
    &lt;/dd&gt;
    &lt;dt&gt;git rebase&lt;/dt&gt;
    &lt;dd&gt;
        &lt;dl&gt;
            &lt;dt&gt;&lt;code&gt;git rebase АПСТРИМ ВЕТКА&lt;/code&gt;&lt;/dt&gt;
            &lt;dl&gt;Сохраняет фиксации, которых нет в АПСТРИМЕ во временную область, сбрасывает текущее состояние к АПСТРИМУ,
                а затем применяет фиксации поверх АПСТРИМА.
            &lt;/dl&gt;
        &lt;/dl&gt;
    &lt;/dd&gt;
    &lt;dt&gt;git push КУДА НАЗВАНИЕ_ВЕТКИ&lt;/dt&gt;
    &lt;dd&gt;
        Проталкивает изменения из локального репозитория во внешний
    &lt;/dd&gt;
    &lt;dt&gt;git fetch ОТКУДА&lt;/dt&gt;
    &lt;dd&gt;
        Забирает изменения из внешнего репозитория&lt;br/&gt;
        Если параметр не указан — вместо ОТКУДА подставляется origin (т.е. репозиторий, из которого был выполнен clone)
    &lt;/dd&gt;
    &lt;dt&gt;git pull ОТКУДА&lt;/dt&gt;
    &lt;dd&gt;
        Забирает изменения из внешнего репозитория и пытается автоматичски выполнить слияние
        &lt;dl&gt;
            &lt;dt&gt;&lt;code&gt;--rebase&lt;/code&gt;&lt;/dt&gt;
            &lt;dd&gt;Выполняет &lt;code&gt;git rebase&lt;/code&gt; вместо &lt;code&gt;git merge&lt;/code&gt; после fetch&apos;а&lt;/dd&gt;
        &lt;/dl&gt;
    &lt;/dd&gt;
&lt;/dl&gt;





	</description>
    </item>

  </channel> 
</rss>
